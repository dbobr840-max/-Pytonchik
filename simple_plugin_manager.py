import os
import sys
import subprocess
import json

class SimplePluginManager:
    def __init__(self):
        self.plugins_dir = "C:\\Pytonchik\\plugins"
        os.makedirs(self.plugins_dir, exist_ok=True)
        
    def list_plugins(self):
        """–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤"""
        plugins = {
            "youtube-plus": {
                "name": "YouTube+",
                "description": "üé¨ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ YouTube —á–µ—Ä–µ–∑ Pytonchik",
                "version": "1.0"
            },
            "info-mods": {
                "name": "Info+Mods", 
                "description": "üöÄ 200+ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π –¥–ª—è Pytonchik",
                "version": "1.0"
            },
            "game-engine": {
                "name": "Game Engine",
                "description": "üéÆ –î–≤–∏–∂–æ–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è 2D –∏–≥—Ä", 
                "version": "1.0"
            },
            "ai-assistant": {
                "name": "AI Assistant",
                "description": "ü§ñ –ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ —Å –ò–ò",
                "version": "1.0"
            }
        }
        
        print("üì¶ –î–û–°–¢–£–ü–ù–´–ï –ü–õ–ê–ì–ò–ù–´:")
        print("=" * 50)
        for plugin_id, info in plugins.items():
            print(f"üîπ {info['name']}")
            print(f"   üìù {info['description']}")
            print(f"   üè∑Ô∏è  –í–µ—Ä—Å–∏—è: {info['version']}")
            print(f"   üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞: install-sets {plugin_id}")
            print()
    
    def install_plugin(self, plugin_name):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞"""
        plugins = {
            "youtube-plus": self.install_youtube_plus,
            "info-mods": self.install_info_mods,
            "game-engine": self.install_game_engine,
            "ai-assistant": self.install_ai_assistant
        }
        
        if plugin_name in plugins:
            print(f"üöÄ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é {plugin_name}...")
            print("-" * 40)
            plugins[plugin_name]()
            print("-" * 40)
            print(f"‚úÖ {plugin_name} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        else:
            print(f"‚ùå –ü–ª–∞–≥–∏–Ω '{plugin_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã: youtube-plus, info-mods, game-engine, ai-assistant")
    
    def install_youtube_plus(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ YouTube+ –ø–ª–∞–≥–∏–Ω–∞"""
        youtube_code = '''import tkinter as tk
from tkinter import ttk, messagebox
import webbrowser

def youtube_gui():
    root = tk.Tk()
    root.title("YouTube+ üé¨")
    root.geometry("500x400")
    
    # –°—Ç–∏–ª–∏
    style = ttk.Style()
    style.configure('TButton', font=('Arial', 10))
    style.configure('TLabel', font=('Arial', 11))
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_label = ttk.Label(root, text="YouTube+ Plugin", font=('Arial', 16, 'bold'))
    title_label.pack(pady=20)
    
    # –°—Ç–∞—Ç—É—Å
    status_label = ttk.Label(root, text="‚úÖ –ü–ª–∞–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!", foreground="green")
    status_label.pack(pady=10)
    
    # –§—Ä–µ–π–º —Å –∫–Ω–æ–ø–∫–∞–º–∏
    btn_frame = ttk.Frame(root)
    btn_frame.pack(pady=20)
    
    # –ö–Ω–æ–ø–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π
    ttk.Button(btn_frame, text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞", 
              command=lambda: messagebox.showinfo("YouTube+", "–§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–Ω–∞–ª–∞")).pack(pady=5, fill='x')
    
    ttk.Button(btn_frame, text="üîç –ü–æ–∏—Å–∫ –≤–∏–¥–µ–æ", 
              command=lambda: messagebox.showinfo("YouTube+", "–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –≤–∏–¥–µ–æ")).pack(pady=5, fill='x')
    
    ttk.Button(btn_frame, text="üé¨ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ", 
              command=lambda: webbrowser.open("https://www.youtube.com")).pack(pady=5, fill='x')
    
    ttk.Button(btn_frame, text="üìà –¢—Ä–µ–Ω–¥—ã", 
              command=lambda: messagebox.showinfo("YouTube+", "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–∏–¥–µ–æ")).pack(pady=5, fill='x')
    
    # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
    ttk.Button(root, text="‚ùå –í—ã—Ö–æ–¥", 
              command=root.quit).pack(pady=20)
    
    root.mainloop()

if __name__ == "__main__":
    youtube_gui()
'''
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞–≥–∏–Ω
        plugin_file = os.path.join(self.plugins_dir, "youtube_plus.py")
        with open(plugin_file, "w", encoding="utf-8") as f:
            f.write(youtube_code)
        
        # –°–æ–∑–¥–∞–µ–º –±–∞—Ç-—Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞
        bat_content = '''@echo off
chcp 65001
echo üé¨ –ó–∞–ø—É—Å–∫ YouTube+ –ø–ª–∞–≥–∏–Ω–∞...
python "C:\\Pytonchik\\plugins\\youtube_plus.py"
'''
        bat_file = os.path.join(self.plugins_dir, "youtube_plus.bat")
        with open(bat_file, "w", encoding="utf-8") as f:
            f.write(bat_content)
        
        print("üìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: youtube_plus.py")
        print("üìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: youtube_plus.bat")
        print("üöÄ –ó–∞–ø—É—Å–∫: youtube-plus")
    
    def install_info_mods(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Info+Mods –ø–ª–∞–≥–∏–Ω–∞"""
        info_mods_code = '''import tkinter as tk
from tkinter import ttk, messagebox
import random
import psutil
import platform

def info_mods_gui():
    root = tk.Tk()
    root.title("Info+Mods üöÄ")
    root.geometry("600x500")
    
    # –°—Ç–∏–ª–∏
    style = ttk.Style()
    style.configure('TButton', font=('Arial', 10))
    style.configure('TLabel', font=('Arial', 11))
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_label = ttk.Label(root, text="Info+Mods - 200+ —Ñ—É–Ω–∫—Ü–∏–π", font=('Arial', 16, 'bold'))
    title_label.pack(pady=20)
    
    # –°—Ç–∞—Ç—É—Å
    status_label = ttk.Label(root, text="‚úÖ –ü–ª–∞–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!", foreground="green")
    status_label.pack(pady=10)
    
    # –§—Ä–µ–π–º —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
    tab_control = ttk.Notebook(root)
    
    # –í–∫–ª–∞–¥–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    system_tab = ttk.Frame(tab_control)
    tab_control.add(system_tab, text='üñ•Ô∏è –°–∏—Å—Ç–µ–º–∞')
    
    # –í–∫–ª–∞–¥–∫–∞ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π
    fun_tab = ttk.Frame(tab_control)
    tab_control.add(fun_tab, text='üéÆ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è')
    
    tab_control.pack(expand=1, fill='both', padx=10, pady=10)
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    ttk.Button(system_tab, text="üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ", 
              command=lambda: messagebox.showinfo("–°–∏—Å—Ç–µ–º–∞", f"OS: {platform.system()}\\nCPU: {psutil.cpu_percent()}%")).pack(pady=5)
    
    ttk.Button(system_tab, text="üíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–º—è—Ç–∏", 
              command=lambda: messagebox.showinfo("–ü–∞–º—è—Ç—å", f"RAM: {psutil.virtual_memory().percent}%")).pack(pady=5)
    
    # –†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    ttk.Button(fun_tab, text="üòÇ –°–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞", 
              command=lambda: messagebox.showinfo("–®—É—Ç–∫–∞", random.choice([
                  "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—É—Ç–∞—é—Ç –•—ç–ª–ª–æ—É–∏–Ω –∏ –†–æ–∂–¥–µ—Å—Ç–≤–æ? Oct 31 == Dec 25!",
                  "–°–∫–æ–ª—å–∫–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –Ω—É–∂–Ω–æ –¥–ª—è –≤–∫—Ä—É—á–∏–≤–∞–Ω–∏—è –ª–∞–º–ø–æ—á–∫–∏? –ù–∏ –æ–¥–Ω–æ–≥–æ!"
              ]))).pack(pady=5)
    
    ttk.Button(fun_tab, text="üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ", 
              command=lambda: messagebox.showinfo("–ß–∏—Å–ª–æ", f"–í–∞—à–µ —á–∏—Å–ª–æ: {random.randint(1, 100)}")).pack(pady=5)
    
    # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
    ttk.Button(root, text="‚ùå –í—ã—Ö–æ–¥", 
              command=root.quit).pack(pady=20)
    
    root.mainloop()

if __name__ == "__main__":
    info_mods_gui()
'''
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞–≥–∏–Ω
        plugin_file = os.path.join(self.plugins_dir, "info_mods.py")
        with open(plugin_file, "w", encoding="utf-8") as f:
            f.write(info_mods_code)
        
        # –°–æ–∑–¥–∞–µ–º –±–∞—Ç-—Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞
        bat_content = '''@echo off
chcp 65001
echo üöÄ –ó–∞–ø—É—Å–∫ Info+Mods –ø–ª–∞–≥–∏–Ω–∞...
python "C:\\Pytonchik\\plugins\\info_mods.py"
'''
        bat_file = os.path.join(self.plugins_dir, "info_mods.bat")
        with open(bat_file, "w", encoding="utf-8") as f:
            f.write(bat_content)
        
        print("üìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: info_mods.py")
        print("üìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: info_mods.bat")
        print("üöÄ –ó–∞–ø—É—Å–∫: info-mods")
        
        # –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å psutil
        try:
            import psutil
            print("‚úÖ psutil —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except:
            print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é psutil...")
            subprocess.check_call([sys.executable, "-m", "pip", "install", "psutil"])
    
    def install_game_engine(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Game Engine –ø–ª–∞–≥–∏–Ω–∞"""
        game_code = '''import tkinter as tk
from tkinter import ttk, messagebox

def game_engine_gui():
    root = tk.Tk()
    root.title("Game Engine üéÆ")
    root.geometry("500x400")
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_label = ttk.Label(root, text="Game Engine Plugin", font=('Arial', 16, 'bold'))
    title_label.pack(pady=20)
    
    status_label = ttk.Label(root, text="‚úÖ –ü–ª–∞–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!", foreground="green")
    status_label.pack(pady=10)
    
    # –ò–≥—Ä—ã
    games_frame = ttk.Frame(root)
    games_frame.pack(pady=20)
    
    ttk.Button(games_frame, text="üêç –ó–º–µ–π–∫–∞", 
              command=lambda: messagebox.showinfo("–ó–º–µ–π–∫–∞", "–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –ó–º–µ–π–∫–∞...")).pack(pady=5, fill='x')
    
    ttk.Button(games_frame, text="üß© –¢–µ—Ç—Ä–∏—Å", 
              command=lambda: messagebox.showinfo("–¢–µ—Ç—Ä–∏—Å", "–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –¢–µ—Ç—Ä–∏—Å...")).pack(pady=5, fill='x')
    
    ttk.Button(games_frame, text="üéØ –ê—Ä–∫–∞–Ω–æ–∏–¥", 
              command=lambda: messagebox.showinfo("–ê—Ä–∫–∞–Ω–æ–∏–¥", "–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –ê—Ä–∫–∞–Ω–æ–∏–¥...")).pack(pady=5, fill='x')
    
    ttk.Button(root, text="‚ùå –í—ã—Ö–æ–¥", 
              command=root.quit).pack(pady=20)
    
    root.mainloop()

if __name__ == "__main__":
    game_engine_gui()
'''
        
        plugin_file = os.path.join(self.plugins_dir, "game_engine.py")
        with open(plugin_file, "w", encoding="utf-8") as f:
            f.write(game_code)
        
        print("üìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: game_engine.py")
        print("üöÄ –ó–∞–ø—É—Å–∫: game-engine")
    
    def install_ai_assistant(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ AI Assistant –ø–ª–∞–≥–∏–Ω–∞"""
        ai_code = '''import tkinter as tk
from tkinter import ttk, messagebox

def ai_assistant_gui():
    root = tk.Tk()
    root.title("AI Assistant ü§ñ")
    root.geometry("500x400")
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_label = ttk.Label(root, text="AI Assistant Plugin", font=('Arial', 16, 'bold'))
    title_label.pack(pady=20)
    
    status_label = ttk.Label(root, text="‚úÖ –ü–ª–∞–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!", foreground="green")
    status_label.pack(pady=10)
    
    # –§—É–Ω–∫—Ü–∏–∏ –ò–ò
    ai_frame = ttk.Frame(root)
    ai_frame.pack(pady=20)
    
    ttk.Button(ai_frame, text="üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã", 
              command=lambda: messagebox.showinfo("–ò–ò", "–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã")).pack(pady=5, fill='x')
    
    ttk.Button(ai_frame, text="üí¨ –ß–∞—Ç-–±–æ—Ç", 
              command=lambda: messagebox.showinfo("–ò–ò", "–ß–∞—Ç-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω")).pack(pady=5, fill='x')
    
    ttk.Button(ai_frame, text="üìù –ê–≤—Ç–æ–ø–∏—Å–∞–Ω–∏–µ", 
              command=lambda: messagebox.showinfo("–ò–ò", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ")).pack(pady=5, fill='x')
    
    ttk.Button(root, text="‚ùå –í—ã—Ö–æ–¥", 
              command=root.quit).pack(pady=20)
    
    root.mainloop()

if __name__ == "__main__":
    ai_assistant_gui()
'''
        
        plugin_file = os.path.join(self.plugins_dir, "ai_assistant.py")
        with open(plugin_file, "w", encoding="utf-8") as f:
            f.write(ai_code)
        
        print("üìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ai_assistant.py")
        print("üöÄ –ó–∞–ø—É—Å–∫: ai-assistant")
    
    def list_installed(self):
        """–°–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤"""
        installed = []
        for file in os.listdir(self.plugins_dir):
            if file.endswith('.py'):
                installed.append(file[:-3])  # —É–±–∏—Ä–∞–µ–º .py
        
        if not installed:
            print("‚ùå –ù–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤")
            return
        
        print("üìÅ –£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –ü–õ–ê–ì–ò–ù–´:")
        print("=" * 40)
        for plugin in installed:
            print(f"‚úÖ {plugin}")
            bat_file = os.path.join(self.plugins_dir, f"{plugin}.bat")
            if os.path.exists(bat_file):
                print(f"   üöÄ –ó–∞–ø—É—Å–∫: {plugin.replace('_', '-')}")
            else:
                print(f"   üöÄ –ó–∞–ø—É—Å–∫: python C:\\Pytonchik\\plugins\\{plugin}.py")
            print()

def main():
    if len(sys.argv) < 2:
        print("üì¶ Pytonchik Plugin Manager")
        print("=" * 50)
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  install-sets list                    - —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤")
        print("  install-sets install <plugin>        - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–ª–∞–≥–∏–Ω")
        print("  install-sets installed               - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã")
        print()
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print("  install-sets install youtube-plus")
        print("  install-sets install info-mods")
        print("  install-sets list")
        return
    
    manager = SimplePluginManager()
    command = sys.argv[1]
    
    if command == "list":
        manager.list_plugins()
    elif command == "install" and len(sys.argv) > 2:
        plugin_name = sys.argv[2]
        manager.install_plugin(plugin_name)
    elif command == "installed":
        manager.list_installed()
    else:
        print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
        print("üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: install-sets list")

if __name__ == "__main__":
    main()